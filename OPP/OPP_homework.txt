Кратко описать, какими принципами ООП вы пользуетесь при разработке приложений (на каких этапах, обосновать)
В начале приложения, создается родительский абстрактный класс, в котором описываются шаблонны функций.
От абстрактного класса наследованием созадются производные классы, в которых шаблоны функций заполняются (получаем полиморфизм)
Пользуйся функциями разных классов, ссылаясь на них (получаем инкапсуляцию).
Все 4 основных принципа ООП взаимосвязаны (абстрагизм, полиморфизм, наследование, инкапсуляция), одни без других достаточно бесполезны.
К примеру приложение для кофе машины:
Создается родительский класс (является абстрактным): напитки (использование абстрагизма)
В нем описываем переменные: температура, название, время приготовления
Описываем шаблон функции "приготовление напитка"
Создаем производные классы от родительского класса "напитки" : чай, кофе, какао (использование наследования)
Можно уточнить переменные
Используя шаблон функции "приготовления напитка" от родительского класса "напитки", уточняем его до функционального уровня (использование полиморфизма)
Вызывая функции из производных(дочерних) классов, мы пользуемся (инкапсуляцией, мы можем только взаимодествовать с ними исполуя предоставленный интерфейс описанный в классе)
При написаннии классов можно закрыть или открыть (для использования в дальнейшем коде), некоторые данные используя private, protected, internal
4 принципа позволяют сэкономить строки в коде(использование повторно строчек кода), упростить понимание программы(наследование)     